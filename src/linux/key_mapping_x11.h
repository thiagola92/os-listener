/*
    Adaptation from Godot:
    https://github.com/godotengine/godot/blob/master/platform/linuxbsd/x11/key_mapping_x11.h
    https://github.com/godotengine/godot/blob/master/platform/linuxbsd/x11/key_mapping_x11.cpp
*/

#ifndef KEY_MAPPING_X11_H
#define KEY_MAPPING_X11_H

// To use XK_* defines from <X11/keysymdef.h>
#define XK_MISCELLANY
#define XK_LATIN1
#define XK_XKB_KEYS

#include "godot_cpp/godot.hpp"
#include "keyboard.h"

#include <X11/XF86keysym.h>
#include <X11/keysymdef.h>
#include <unordered_map>

static std::unordered_map<uint32_t, Keyboard> xkeysym_map = {
    {XK_Escape, Keyboard::ESCAPE},
    {XK_Tab, Keyboard::TAB},
    {XK_ISO_Left_Tab, Keyboard::BACKTAB},
    {XK_BackSpace, Keyboard::BACKSPACE},
    {XK_Return, Keyboard::ENTER},
    {XK_Insert, Keyboard::INSERT},
    {XK_Delete, Keyboard::KEY_DELETE},
    {XK_Clear, Keyboard::KEY_DELETE},
    {XK_Pause, Keyboard::PAUSE},
    {XK_Print, Keyboard::PRINT},
    {XK_Home, Keyboard::HOME},
    {XK_End, Keyboard::END},
    {XK_Left, Keyboard::LEFT},
    {XK_Up, Keyboard::UP},
    {XK_Right, Keyboard::RIGHT},
    {XK_Down, Keyboard::DOWN},
    {XK_Prior, Keyboard::PAGEUP},
    {XK_Next, Keyboard::PAGEDOWN},
    {XK_Shift_L, Keyboard::SHIFT},
    {XK_Shift_R, Keyboard::SHIFT},
    {XK_Shift_Lock, Keyboard::SHIFT},
    {XK_Control_L, Keyboard::CTRL},
    {XK_Control_R, Keyboard::CTRL},
    {XK_Meta_L, Keyboard::META},
    {XK_Meta_R, Keyboard::META},
    {XK_Alt_L, Keyboard::ALT},
    {XK_Alt_R, Keyboard::ALT},
    {XK_Caps_Lock, Keyboard::CAPSLOCK},
    {XK_Num_Lock, Keyboard::NUMLOCK},
    {XK_Scroll_Lock, Keyboard::SCROLLLOCK},
    {XK_less, Keyboard::QUOTELEFT},
    {XK_grave, Keyboard::SECTION},
    {XK_Super_L, Keyboard::META},
    {XK_Super_R, Keyboard::META},
    {XK_Menu, Keyboard::MENU},
    {XK_Hyper_L, Keyboard::HYPER},
    {XK_Hyper_R, Keyboard::HYPER},
    {XK_Help, Keyboard::HELP},
    {XK_KP_Space, Keyboard::SPACE},
    {XK_KP_Tab, Keyboard::TAB},
    {XK_KP_Enter, Keyboard::KP_ENTER},
    {XK_Home, Keyboard::HOME},
    {XK_Left, Keyboard::LEFT},
    {XK_Up, Keyboard::UP},
    {XK_Right, Keyboard::RIGHT},
    {XK_Down, Keyboard::DOWN},
    {XK_Prior, Keyboard::PAGEUP},
    {XK_Next, Keyboard::PAGEDOWN},
    {XK_End, Keyboard::END},
    {XK_Begin, Keyboard::CLEAR},
    {XK_Insert, Keyboard::INSERT},
    {XK_Delete, Keyboard::KEY_DELETE},
    {XK_KP_Equal, Keyboard::EQUAL},
    {XK_KP_Separator, Keyboard::COMMA},
    {XK_KP_Decimal, Keyboard::KP_PERIOD},
    {XK_KP_Multiply, Keyboard::KP_MULTIPLY},
    {XK_KP_Divide, Keyboard::KP_DIVIDE},
    {XK_KP_Subtract, Keyboard::KP_SUBTRACT},
    {XK_KP_Add, Keyboard::KP_ADD},
    {XK_KP_0, Keyboard::KP_0},
    {XK_KP_1, Keyboard::KP_1},
    {XK_KP_2, Keyboard::KP_2},
    {XK_KP_3, Keyboard::KP_3},
    {XK_KP_4, Keyboard::KP_4},
    {XK_KP_5, Keyboard::KP_5},
    {XK_KP_6, Keyboard::KP_6},
    {XK_KP_7, Keyboard::KP_7},
    {XK_KP_8, Keyboard::KP_8},
    {XK_KP_9, Keyboard::KP_9},

    // Same keys but with numlock off.
    {XK_KP_Insert, Keyboard::INSERT},
    {XK_KP_Delete, Keyboard::KEY_DELETE},
    {XK_KP_End, Keyboard::END},
    {XK_KP_Down, Keyboard::DOWN},
    {XK_KP_Page_Down, Keyboard::PAGEDOWN},
    {XK_KP_Left, Keyboard::LEFT},

    // X11 documents this (numpad 5) as "begin of line" but no toolkit seems to
    // interpret it this way. On Windows this is emitting Keyboard::Clear so for
    // consistency it will be mapped to Keyboard::Clear
    {XK_KP_Begin, Keyboard::CLEAR},
    {XK_KP_Right, Keyboard::RIGHT},
    {XK_KP_Home, Keyboard::HOME},
    {XK_KP_Up, Keyboard::UP},
    {XK_KP_Page_Up, Keyboard::PAGEUP},
    {XK_F1, Keyboard::F1},
    {XK_F2, Keyboard::F2},
    {XK_F3, Keyboard::F3},
    {XK_F4, Keyboard::F4},
    {XK_F5, Keyboard::F5},
    {XK_F6, Keyboard::F6},
    {XK_F7, Keyboard::F7},
    {XK_F8, Keyboard::F8},
    {XK_F9, Keyboard::F9},
    {XK_F10, Keyboard::F10},
    {XK_F11, Keyboard::F11},
    {XK_F12, Keyboard::F12},
    {XK_F13, Keyboard::F13},
    {XK_F14, Keyboard::F14},
    {XK_F15, Keyboard::F15},
    {XK_F16, Keyboard::F16},
    {XK_F17, Keyboard::F17},
    {XK_F18, Keyboard::F18},
    {XK_F19, Keyboard::F19},
    {XK_F20, Keyboard::F20},
    {XK_F21, Keyboard::F21},
    {XK_F22, Keyboard::F22},
    {XK_F23, Keyboard::F23},
    {XK_F24, Keyboard::F24},
    {XK_F25, Keyboard::F25},
    {XK_F26, Keyboard::F26},
    {XK_F27, Keyboard::F27},
    {XK_F28, Keyboard::F28},
    {XK_F29, Keyboard::F29},
    {XK_F30, Keyboard::F30},
    {XK_F31, Keyboard::F31},
    {XK_F32, Keyboard::F32},
    {XK_F33, Keyboard::F33},
    {XK_F34, Keyboard::F34},
    {XK_F35, Keyboard::F35},
    {XK_yen, Keyboard::YEN},
    {XK_section, Keyboard::SECTION},

    // Media keys.
    {XF86XK_Back, Keyboard::BACK},
    {XF86XK_Forward, Keyboard::FORWARD},
    {XF86XK_Stop, Keyboard::STOP},
    {XF86XK_Refresh, Keyboard::REFRESH},
    {XF86XK_Favorites, Keyboard::FAVORITES},
    {XF86XK_OpenURL, Keyboard::OPENURL},
    {XF86XK_HomePage, Keyboard::HOMEPAGE},
    {XF86XK_Search, Keyboard::SEARCH},
    {XF86XK_AudioLowerVolume, Keyboard::VOLUMEDOWN},
    {XF86XK_AudioMute, Keyboard::VOLUMEMUTE},
    {XF86XK_AudioRaiseVolume, Keyboard::VOLUMEUP},
    {XF86XK_AudioPlay, Keyboard::MEDIAPLAY},
    {XF86XK_AudioStop, Keyboard::MEDIASTOP},
    {XF86XK_AudioPrev, Keyboard::MEDIAPREVIOUS},
    {XF86XK_AudioNext, Keyboard::MEDIANEXT},
    {XF86XK_AudioRecord, Keyboard::MEDIARECORD},
    {XF86XK_Standby, Keyboard::STANDBY},

    // Launch keys.
    {XF86XK_Mail, Keyboard::LAUNCHMAIL},
    {XF86XK_AudioMedia, Keyboard::LAUNCHMEDIA},
    {XF86XK_MyComputer, Keyboard::LAUNCH0},
    {XF86XK_Calculator, Keyboard::LAUNCH1},
    {XF86XK_Launch0, Keyboard::LAUNCH2},
    {XF86XK_Launch1, Keyboard::LAUNCH3},
    {XF86XK_Launch2, Keyboard::LAUNCH4},
    {XF86XK_Launch3, Keyboard::LAUNCH5},
    {XF86XK_Launch4, Keyboard::LAUNCH6},
    {XF86XK_Launch5, Keyboard::LAUNCH7},
    {XF86XK_Launch6, Keyboard::LAUNCH8},
    {XF86XK_Launch7, Keyboard::LAUNCH9},
    {XF86XK_Launch8, Keyboard::LAUNCHA},
    {XF86XK_Launch9, Keyboard::LAUNCHB},
    {XF86XK_LaunchA, Keyboard::LAUNCHC},
    {XF86XK_LaunchB, Keyboard::LAUNCHD},
    {XF86XK_LaunchC, Keyboard::LAUNCHE},
    {XF86XK_LaunchD, Keyboard::LAUNCHF},
};

#endif